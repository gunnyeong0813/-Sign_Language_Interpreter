# -*- coding: utf-8 -*-
from Tkinter import *
import Leap
import time
import numpy as np
from keras.models import Sequential
from keras.layers.core import Activation, Dense
from keras.utils import np_utils
from keras.models import model_from_json

class TouchPointListener(Leap.Listener):
    predict_data = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])  # 적용 데이터
    direction_index = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]  # 손 그리기 위한 방향 배열 만든 후 삽입
    wrist_index = [0, 0, 0]  # 손목 방향 pitch,yaw,roll
    static_value = ["asdfff"]

    def on_init(self, controller):
        print "Initialized"

    def on_connect(self, controller):
        print "Connected"

    def on_frame(self, controller):
        time.sleep(0.04)
        self.paintCanvas.delete("all")
        frame = controller.frame()

        interactionBox = frame.interaction_box
        j = 0
        for pointable in frame.pointables:
            direction = pointable.direction  # 손가락 마다의 방향 지시
            if j % 5 == 0:
                thumb = float(direction[0] * Leap.RAD_TO_DEG)
                predict_data[0][3] = float(thumb / 180)
                thumb2 = float(direction[1] * Leap.RAD_TO_DEG)
                predict_data[0][4] = float(thumb2 / 180)
                thumb3 = float(direction[2] * Leap.RAD_TO_DEG)
                predict_data[0][5] = float(thumb3 / 180)
            if j % 5 == 1:
                Index = float(direction[0] * Leap.RAD_TO_DEG)
                predict_data[0][6] = float(Index / 180)
                Index2 =float( direction[1] * Leap.RAD_TO_DEG)
                predict_data[0][7] = float(Index2 / 180)
                Index3 = float(direction[2] * Leap.RAD_TO_DEG)
                predict_data[0][8] = float(Index3 / 180)
            if j % 5 == 2:
                Middle = float(direction[0] * Leap.RAD_TO_DEG)
                predict_data[0][9] =float(Middle / 180)
                Middle2 = float(direction[1] * Leap.RAD_TO_DEG)
                predict_data[0][10] = float(Middle2 / 180)
                Middle3 = float(direction[2] * Leap.RAD_TO_DEG)
                predict_data[0][11] =float(Middle3 / 180)
            if j % 5 == 3:
                Ring = float(direction[0] * Leap.RAD_TO_DEG)
                predict_data[0][12] =float (Ring / 180)
                Ring2 = float(direction[1] * Leap.RAD_TO_DEG)
                predict_data[0][13] =float (Ring2 / 180)
                Ring3 = float(direction[2] * Leap.RAD_TO_DEG)
                predict_data[0][14] = float(Ring3 / 180)
            if j % 5 == 4:
                Pinky = float(direction[0] * Leap.RAD_TO_DEG)
                predict_data[0][15] = float(Pinky / 180)
                Pinky2 = float(direction[1] * Leap.RAD_TO_DEG)
                predict_data[0][16] = float(Pinky2 / 180)
                Pinky3 = float(direction[2] * Leap.RAD_TO_DEG)
                predict_data[0][17] = float(Pinky3 / 180)

            print pointable.id
            print direction[0] * Leap.RAD_TO_DEG / 180
            print direction[1] * Leap.RAD_TO_DEG / 180
            print direction[2] * Leap.RAD_TO_DEG / 180
            j += 1

        # Get hands
        for hand in frame.hands:
            handType = "Left hand" if hand.is_left else "Right hand"

            print "  %s, id %d, position: %s" % (
                handType, hand.id, hand.palm_position)
            # Get the hand's normal vector and direction
            normal = hand.palm_normal
            direction = hand.direction

            # Calculate the hand's pitch, roll, and yaw angles
            print "  pitch: %f degrees, roll: %f degrees, yaw: %f degrees" % (
                direction.pitch * Leap.RAD_TO_DEG,
                normal.roll * Leap.RAD_TO_DEG,
                direction.yaw * Leap.RAD_TO_DEG)
            pitch = float(direction.pitch * Leap.RAD_TO_DEG)
            predict_data[0][0] = float(float(pitch) / float(180))
            roll = float(normal.roll * Leap.RAD_TO_DEG)
            predict_data[0][1] = float(roll / 180)
            yaw = float(direction.yaw * Leap.RAD_TO_DEG)
            predict_data[0][2] = float(yaw / 180)

        print float(model.predict(predict_data)[0][0])
        print float(model.predict(predict_data)[0][1])
        print float(model.predict(predict_data)[0][2])
        print predict_data
        try:
            if not len(frame.hands) == 0:

                if model.predict_classes(predict_data) == [0] and model.predict(predict_data)[0][0] >= 0.99:
                    print model.predict_classes(predict_data, verbose=0)
                    print "ㄱ 저장완료"
                    self.static_value[0] = "ㄱ"
                    self.paintCanvas.configure(background='yellow')
                    time.sleep(1)
                    self.paintCanvas.configure(background='white')
                if model.predict_classes(predict_data) == [1] and model.predict(predict_data)[0][1] >= 0.99:
                    print model.predict_classes(predict_data, verbose=0)

                    print "ㅏ 저장완료"
                    self.static_value[0] = "ㅏ"
                    self.paintCanvas.configure(background='yellow')
                    time.sleep(1)
                    self.paintCanvas.configure(background='white')
                if model.predict_classes(predict_data) == [2] and model.predict(predict_data)[0][2] >= 0.99:
                    print model.predict_classes(predict_data, verbose=0)

                    print "ㄷ 저장완료"
                    self.static_value[0] = "ㄷ"
                    self.paintCanvas.configure(background='yellow')
                    time.sleep(1)
                    self.paintCanvas.configure(background='white')
                if model.predict_classes(predict_data) == [3] and model.predict(predict_data)[0][3] >= 0.99:
                    print model.predict_classes(predict_data, verbose=0)

                    print "ㄴ 저장완료"
                    self.static_value[0] = "ㄴ"
                    self.paintCanvas.configure(background='yellow')
                    time.sleep(1)
                    self.paintCanvas.configure(background='white')
        except:
            pass

        self.v2 = StringVar(value=self.static_value[0])
        self.txt = Entry(textvariable=self.v2)
        self.txt.grid(row=0, column=1)
        i = 0
        for hand in frame.hands:

            arm = hand.arm
            self.wrist_index[0] = interactionBox.normalize_point(arm.wrist_position)
            # self.drawPoint(self.wrist_index[0].x * 800, 600 - self.wrist_index[0].y * 600, 20, 20, color)
            for finger in hand.fingers:
                for b in range(0, 4):
                    bone = finger.bone(b)
                    if b == 1 and i == 0:
                        self.direction_index[0] = interactionBox.normalize_point(bone.next_joint)
                    elif b == 0 and i == 0:
                        self.direction_index[1] = interactionBox.normalize_point(bone.next_joint)
                    elif b == 0 and i == 1:
                        self.direction_index[2] = interactionBox.normalize_point(bone.next_joint)
                    elif b == 0 and i == 2:
                        self.direction_index[3] = interactionBox.normalize_point(bone.next_joint)
                    elif b == 0 and i == 3:
                        self.direction_index[4] = interactionBox.normalize_point(bone.next_joint)
                    elif b == 0 and i == 4:
                        self.direction_index[5] = interactionBox.normalize_point(bone.next_joint)
                        self.drawRect(self.direction_index[0].x * 800, 600 - self.direction_index[0].y * 600,
                                      self.direction_index[1].x * 800, 600 - self.direction_index[1].y * 600,
                                      self.direction_index[2].x * 800, 600 - self.direction_index[2].y * 600,
                                      self.direction_index[3].x * 800, 600 - self.direction_index[3].y * 600,
                                      self.direction_index[4].x * 800, 600 - self.direction_index[4].y * 600,
                                      self.direction_index[5].x * 800,
                                      600 - self.direction_index[5].y * 600, self.wrist_index[0].x * 800,
                                      600 - self.wrist_index[0].y * 600)  # 손바닥 그리기
                    if b == 1 and i == 5:
                        self.direction_index[6] = interactionBox.normalize_point(bone.next_joint)
                    elif b == 0 and i == 5:
                        self.direction_index[7] = interactionBox.normalize_point(bone.next_joint)
                    elif b == 0 and i == 6:
                        self.direction_index[8] = interactionBox.normalize_point(bone.next_joint)
                    elif b == 0 and i == 7:
                        self.direction_index[9] = interactionBox.normalize_point(bone.next_joint)
                    elif b == 0 and i == 8:
                        self.direction_index[10] = interactionBox.normalize_point(bone.next_joint)
                    elif b == 0 and i == 9:
                        self.direction_index[11] = interactionBox.normalize_point(bone.next_joint)
                        self.drawRect(self.direction_index[6].x * 800, 600 - self.direction_index[6].y * 600,
                                      self.direction_index[7].x * 800, 600 - self.direction_index[7].y * 600,
                                      self.direction_index[8].x * 800, 600 - self.direction_index[8].y * 600,
                                      self.direction_index[9].x * 800, 600 - self.direction_index[9].y * 600,
                                      self.direction_index[10].x * 800, 600 - self.direction_index[10].y * 600,
                                      self.direction_index[11].x * 800,
                                      600 - self.direction_index[11].y * 600, self.wrist_index[0].x * 800,
                                      600 - self.wrist_index[0].y * 600)

                    normalbone = interactionBox.normalize_point(bone.prev_joint)
                    normalbone2 = interactionBox.normalize_point(bone.next_joint)

                    # self.drawPoint(normalbone.x * 800, 600 - normalbone.y * 600, 20, 20, color)
                    if not b == 0:
                        self.drawLine(normalbone.x * 800, 600 - normalbone.y * 600, normalbone2.x * 800,
                                      600 - normalbone2.y * 600)
                i += 1

    def drawPoint(self, x, y, width, height, color):
        self.paintCanvas.create_oval(x, y, x + width, y + height, fill="black",
                                     outline="")  # 손가락 마디마다의 점 그리기 //현재 사용 안함

    def drawLine(self, x, y, x2, y2):
        self.paintCanvas.create_line(x, y, x2, y2, fill="GRAY", width=15)  # 손가락 관절 사이사이 그리기

    def drawRect(self, x, y, x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):  # 손바닥 그리기 함수
        self.paintCanvas.create_polygon(x, y, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6, x1, y1, fill="YELLOW")

    def set_canvas(self, canvas):
        self.paintCanvas = canvas

    def rgb_to_hex(self, rgb):
        return '#%02x%02x%02x' % rgb


class PaintBox(Frame):
    def __init__(self):
        Frame.__init__(self)
        self.leap = Leap.Controller()
        self.painter = TouchPointListener()
        self.leap.add_listener(self.painter)
        self.grid(row=0, column=0)
        self.v = StringVar(value='default text')
        self.txt = Entry(textvariable=self.v, width='50')
        self.txt.grid(row=0, column=1)

        self.master.title("Touch Points")
        self.master.geometry("1200x600")

        # create Canvas component
        self.paintCanvas = Canvas(self, width="800", height="600")
        self.paintCanvas.pack()
        self.painter.set_canvas(self.paintCanvas)


def main():
    PaintBox().mainloop()


if __name__ == "__main__":
    static1 = np.array([[-47, 5, -16, -47, -20, -25, -8, -55, -11, 9, 40, 39, 5, 38, 41,
                         -13, 36, 41],
                        [-47, 5, -16, -47, -19, -25, -8, -55, -11, 9, 41, 38, 5, 39, 41,
                         -13, 38, 40],
                        [-47, 5, -16, -47, -20, -24, -8, -55, -10, 9, 41, 38, 4, 37, 42,
                         -13, 36, 41],
                        [-46, 3, -17, -47, -19, -24, -8, -55, -10, 9, 41, 38, 5, 39, 41,
                         -13, 37, 41],
                        [-46, 2, -17, -47, -19, -24, -8, -55, -9, 10, 40, 38, 5, 39, 41,
                         -12, 37, 40],
                        [-46, 1, -17, -47, -19, -24, -8, -55, -9, 10, 41, 38, 5, 38, 42,
                         -12, 37, 41],
                        [-46, 1, -17, -47, -19, -24, -8, -55, -10, 10, 41, 38, 5, 38, 42,
                         -11, 37, 41],
                        [-46, 1, -17, -47, -19, -24, -8, -55, -10, 10, 40, 38, 5, 38, 41,
                         -12, 38, 41],
                        [-45, 1, -18, -48, -18, -24, -9, -55, -9, 10, 40, 39, 6, 38, 41,
                         -10, 38, 41],
                        [-46, 1, -19, -48, -17, -23, -9, -55, -10, 11, 40, 38, 7, 38, 41,
                         -9, 38, 41],
                        [-45, 2, -18, -48, -17, -24, -8, -55, -10, 10, 40, 39, 6, 38, 41,
                         -9, 37, 42],
                        [-44, 2, -18, -48, -17, -25, -8, -55, -10, 10, 39, 40, 6, 38, 41,
                         -9, 36, 42],
                        [-44, 2, -17, -48, -17, -25, -8, -55, -10, 10, 39, 39, 6, 38, 41,
                         -9, 36, 42],
                        [-44, 2, -18, -48, -17, -25, -8, -55, -10, 10, 39, 39, 6, 38, 42,
                         -8, 37, 42],
                        [-44, 2, -18, -48, -17, -25, -8, -55, -11, 10, 40, 39, 6, 37, 43,
                         -8, 37, 42],
                        [-45, 1, -17, -47, -18, -25, -8, -55, -11, 10, 40, 39, 5, 36, 43,
                         -8, 36, 43],
                        [-44, 1, -18, -48, -17, -25, -8, -55, -11, 10, 39, 39, 6, 35, 44,
                         -8, 35, 43],
                        [-43, 2, -18, -48, -16, -25, -8, -55, -10, 11, 38, 40, 6, 35, 44,
                         -6, 35, 44],
                        [-48, 6, -27, -51, -17, -19, -12, -55, -7, 16, 40, 37, 12, 38, 40,
                         0, 38, 42],
                        [-50, 9, -29, -51, -18, -17, -12, -55, -8, 17, 40, 37, 12, 39, 39,
                         0, 39, 41],
                        [-53, 4, -35, -52, -18, -15, -16, -54, -7, 20, 40, 35, 14, 39, 38,
                         0, 40, 40],
                        [-52, 1, -36, -52, -15, -16, -17, -53, -7, 21, 40, 33, 16, 40, 36,
                         2, 41, 39],
                        [-52, 7, -35, -52, -15, -16, -14, -55, -6, 21, 41, 32, 15, 40, 37,
                         2, 40, 39],
                        [-53, 4, -27, -49, -21, -19, -10, -55, -7, 15, 42, 34, 10, 41, 37,
                         -4, 41, 39],
                        [-52, 6, -19, -46, -25, -20, -5, -56, -7, 10, 44, 34, 5, 43, 36,
                         -9, 42, 37],
                        [-51, 6, -11, -44, -28, -22, -1, -56, -7, 5, 44, 35, 1, 43, 37,
                         -14, 40, 37],
                        [-51, 6, -6, -42, -30, -24, 1, -56, -7, 2, 44, 35, -2, 42, 38,
                         -18, 39, 37],
                        [-52, 7, -2, -40, -32, -24, 3, -56, -7, 0, 45, 34, -4, 43, 36,
                         -20, 39, 35],
                        [-53, 6, -3, -40, -33, -23, 3, -56, -9, 0, 46, 34, -4, 44, 36,
                         -20, 40, 35],
                        [-52, 6, -5, -41, -32, -23, 1, -55, -12, 1, 44, 36, -3, 43, 37,
                         -19, 40, 36],
                        [-48, 6, -9, -43, -27, -24, 0, -55, -15, 4, 41, 38, 0, 41, 39,
                         -15, 38, 39],
                        [-46, 8, -11, -44, -26, -25, -1, -54, -17, 6, 40, 40, 0, 39, 41,
                         -13, 37, 41],
                        [-45, 7, -14, -46, -21, -25, -4, -55, -14, 8, 39, 40, 3, 39, 41,
                         -10, 37, 42],
                        [-47, 6, -16, -47, -21, -23, -5, -56, -9, 9, 40, 39, 5, 39, 41,
                         -9, 38, 41],
                        [-48, 8, -19, -47, -22, -23, -5, -56, -6, 11, 38, 40, 6, 38, 42,
                         -8, 37, 42],
                        [-50, 7, -18, -47, -22, -23, -6, -56, -1, 11, 41, 37, 5, 41, 38,
                         -9, 40, 39],
                        [-49, 6, -17, -48, -20, -23, -5, -57, 1, 10, 41, 37, 4, 41, 39,
                         -10, 39, 40],
                        [-49, 6, -17, -48, -20, -22, -5, -56, 1, 11, 42, 37, 4, 41, 38,
                         -9, 39, 40],
                        [-49, 6, -18, -48, -21, -22, -6, -56, 0, 11, 42, 36, 5, 42, 37,
                         -9, 40, 39],
                        [-50, 8, -18, -47, -23, -21, -6, -56, -1, 11, 42, 37, 5, 44, 36,
                         -8, 41, 38],
                        [-46, 5, -18, -48, -20, -24, -6, -56, -2, 12, 39, 39, 5, 40, 40,
                         -8, 38, 41],
                        [-49, 6, -19, -48, -21, -21, -6, -56, 0, 13, 42, 36, 6, 42, 37,
                         -8, 40, 40],
                        [-53, 9, -19, -47, -25, -18, -5, -56, -1, 12, 45, 32, 5, 45, 34,
                         -9, 42, 36],
                        [-51, 9, -20, -48, -23, -20, -6, -56, -1, 13, 41, 37, 6, 40, 39,
                         -9, 40, 39],
                        [-52, 10, -21, -49, -22, -19, -6, -56, -1, 14, 43, 34, 6, 44, 35,
                         -8, 41, 38],
                        [-53, 14, -20, -47, -25, -18, -4, -57, -1, 13, 43, 35, 5, 42, 37,
                         -9, 41, 38],
                        [-54, 14, -21, -47, -25, -18, -6, -56, -3, 13, 44, 33, 5, 44, 35,
                         -8, 42, 37],
                        [-56, 14, -22, -48, -25, -17, -5, -56, -2, 12, 45, 32, 5, 44, 35,
                         -9, 43, 36],
                        [-55, 13, -21, -48, -24, -17, -5, -56, -2, 12, 44, 34, 5, 44, 35,
                         -9, 43, 36],
                        [-54, 11, -21, -48, -24, -18, -5, -56, -2, 12, 44, 33, 6, 44, 35,
                         -9, 42, 36]
                        ], "float32")
    static2 = np.array([[-1, -65, -63, -27, 40, -28, -56, -8, 2, 47, -1, 32, 45, 7, 34,
                         36, 28, 34],
                        [0, -67, -63, -27, 41, -29, -56, -6, 1, 47, -1, 32, 46, 7, 33,
                         37, 28, 33],
                        [1, -67, -63, -27, 41, -29, -57, -4, 0, 47, -2, 32, 45, 7, 33,
                         37, 28, 33],
                        [2, -78, -64, -25, 40, -32, -57, 0, 2, 47, -2, 31, 47, 7, 31,
                         39, 28, 30],
                        [5, -73, -65, -25, 41, -30, -57, 0, 1, 48, -3, 29, 48, 4, 29,
                         41, 26, 29],
                        [4, -74, -65, -26, 41, -30, -57, 0, 3, 47, -2, 31, 46, 5, 32,
                         40, 27, 30],
                        [6, -79, -67, -26, 40, -30, -57, 2, 3, 47, -2, 31, 47, 5, 31,
                         41, 27, 28],
                        [5, -78, -67, -26, 40, -30, -57, 3, 2, 47, -2, 31, 47, 6, 30,
                         41, 27, 28],
                        [4, -80, -67, -26, 40, -31, -56, 4, 4, 48, -2, 31, 47, 8, 30,
                         41, 28, 27],
                        [7, -75, -66, -25, 41, -30, -56, 4, 3, 47, -3, 32, 46, 6, 32,
                         41, 26, 29],
                        [14, -87, -67, -23, 41, -31, -55, 11, 6, 47, -5, 32, 47, 4, 31,
                         43, 24, 27],
                        [15, -78, -66, -22, 43, -29, -55, 11, 5, 46, -6, 33, 47, 2, 32,
                         42, 23, 30],
                        [10, -66, -65, -25, 43, -26, -56, 7, 4, 45, -5, 34, 44, 3, 35,
                         38, 24, 34],
                        [5, -67, -66, -26, 42, -27, -56, 5, 7, 44, -3, 35, 43, 5, 36,
                         37, 27, 33],
                        [0, -73, -65, -27, 40, -30, -56, 4, 8, 43, 0, 36, 42, 8, 37,
                         35, 29, 33],
                        [2, -72, -62, -25, 41, -30, -56, 3, 10, 43, -2, 36, 40, 7, 39,
                         34, 28, 35],
                        [9, -69, -63, -24, 43, -28, -56, 4, 8, 45, -5, 34, 42, 4, 37,
                         37, 25, 34],
                        [3, -70, -65, -27, 41, -29, -56, 3, 11, 46, -2, 33, 43, 8, 36,
                         36, 28, 33],
                        [0, -65, -64, -27, 41, -28, -56, -1, 11, 45, -2, 34, 41, 8, 38,
                         35, 28, 34],
                        [2, -64, -65, -27, 41, -27, -56, -1, 11, 46, -3, 33, 43, 8, 36,
                         35, 27, 34],
                        [7, -64, -65, -26, 43, -26, -56, 0, 11, 46, -5, 32, 43, 6, 36,
                         34, 25, 38],
                        [5, -72, -65, -26, 41, -29, -55, 0, 12, 46, -3, 33, 42, 8, 37,
                         33, 27, 37],
                        [9, -70, -65, -25, 42, -28, -55, 0, 12, 46, -5, 32, 44, 6, 35,
                         35, 25, 37],
                        [8, -71, -65, -25, 42, -28, -55, 0, 12, 46, -4, 32, 44, 6, 35,
                         35, 24, 37],
                        [14, -70, -66, -24, 44, -27, -55, 2, 12, 48, -7, 29, 47, 4, 32,
                         39, 21, 35],
                        [15, -68, -66, -24, 44, -26, -55, 3, 11, 49, -7, 27, 47, 4, 31,
                         40, 19, 35],
                        [14, -64, -66, -25, 44, -25, -56, 1, 11, 49, -7, 28, 47, 4, 31,
                         40, 19, 36],
                        [9, -64, -65, -26, 43, -26, -56, 0, 11, 48, -5, 30, 45, 6, 34,
                         38, 20, 37],
                        [12, -64, -66, -25, 44, -25, -56, 0, 11, 46, -6, 32, 44, 5, 35,
                         38, 19, 37],
                        [12, -66, -68, -26, 43, -26, -55, 0, 12, 46, -6, 32, 44, 6, 35,
                         37, 20, 37],
                        [14, -71, -67, -24, 43, -27, -55, 1, 12, 46, -6, 32, 44, 6, 35,
                         38, 19, 37],
                        [18, -72, -68, -23, 44, -27, -55, 2, 13, 47, -7, 30, 46, 4, 33,
                         40, 16, 36],
                        [24, -68, -66, -21, 46, -25, -55, 3, 11, 46, -11, 30, 45, 0, 34,
                         40, 10, 38],
                        [19, -69, -65, -22, 45, -26, -56, 2, 11, 46, -10, 31, 45, 2, 35,
                         40, 12, 38],
                        [24, -69, -66, -21, 46, -25, -56, 3, 11, 47, -11, 30, 45, 1, 34,
                         41, 10, 38],
                        [28, -69, -66, -19, 47, -24, -55, 4, 11, 46, -14, 30, 45, 0, 34,
                         41, 8, 38],
                        [27, -61, -64, -20, 49, -21, -56, 2, 9, 45, -15, 31, 44, -2, 36,
                         39, 6, 41],
                        [26, -58, -63, -20, 49, -20, -56, 0, 9, 45, -15, 31, 42, -2, 38,
                         38, 5, 42],
                        [25, -59, -62, -20, 49, -20, -56, 0, 10, 45, -15, 31, 43, -3, 37,
                         37, 5, 43],
                        [13, -74, -66, -24, 43, -28, -55, 1, 13, 47, -6, 30, 45, 6, 34,
                         40, 15, 37],
                        [11, -84, -68, -24, 41, -31, -55, 3, 12, 47, -4, 31, 45, 8, 33,
                         40, 17, 36],
                        [13, -81, -66, -23, 42, -30, -55, 3, 12, 46, -6, 32, 44, 6, 34,
                         38, 15, 38],
                        [16, -91, -69, -23, 41, -32, -55, 5, 14, 48, -5, 30, 46, 7, 32,
                         41, 16, 35],
                        [14, -88, -69, -24, 41, -31, -55, 4, 13, 47, -4, 31, 45, 7, 34,
                         41, 16, 35],
                        [15, -85, -70, -24, 41, -30, -55, 4, 12, 47, -4, 31, 45, 7, 33,
                         41, 16, 36],
                        [15, -88, -71, -25, 40, -30, -55, 5, 12, 47, -3, 31, 45, 8, 33,
                         41, 17, 35],
                        [12, -97, -72, -26, 39, -32, -55, 5, 13, 48, -1, 30, 46, 10, 31,
                         41, 19, 34],
                        [13, -112, -72, -26, 37, -34, -54, 8, 15, 49, -1, 27,
                         48, 10, 28, 42, 21, 31],
                        [14, -119, -72, -24, 36, -36, -53, 9, 16, 50, -1, 26,
                         49, 10, 27, 43, 21, 29],
                        [12, -109, -69, -23, 37, -36, -54, 7, 15, 49, -2, 29,
                         47, 9, 30, 41, 21, 33],
                        ], "float32")
    static3 = np.array([[-5, -84, -59, -56, -7, 3, -46, -32, 6, -57, -4, 0, 8, 13, 55,
                         0, 30, 48],
                        [-8, -79, -58, -45, -34, 4, -56, -9, 2, -56, -7, -1, 13, 12, 54,
                         0, 29, 48],
                        [-8, -73, -55, -46, -33, -1, -56, -10, -1, -56, -9, -6, 9, 10, 55,
                         -3, 27, 50],
                        [14, -30, -21, -46, 7, -32, -27, 9, -49, -35, -28, -34, -38, -34, -25,
                         -42, -31, -22],
                        [42, 12, -21, -7, 16, -54, -12, 7, -55, -6, -2, -56, -2, -39, -41,
                         -11, -33, -44],
                        [-17, -57, -61, -49, -28, -2, -54, -17, 6, -54, -12, 11, -9, 1, 56,
                         -16, 8, 54],
                        [35, -93, -69, -56, 2, 8, -54, 12, 14, -52, 14, 16, 25, 4, 51,
                         19, 15, 51],
                        [36, -93, -72, -54, 9, 14, -54, -6, 15, -55, 8, 12, 33, 3, 46,
                         26, 16, 47],
                        [33, -132, -74, -53, 11, 16, -53, 5, 19, -53, 11, 16,
                         43, 8, 36, 39, 24, 33],
                        [27, -93, -78, -54, 3, 18, -50, -16, 21, -54, 2, 15, 46, 7, 32,
                         41, 21, 33],
                        [34, -40, -78, -52, -18, 14, -55, -2, 14, -54, 0, 18, 45, 0, 34,
                         40, 11, 38],
                        [44, -46, -80, -53, -11, 18, -55, 0, 15, -53, 3, 19, 47, -1, 31,
                         43, 9, 35],
                        [50, -45, -78, -54, -12, 14, -55, 1, 13, -54, 3, 18, 46, -6, 32,
                         43, 4, 36],
                        [42, -48, -77, -54, 0, 18, -47, -29, 13, -55, 0, 13, 49, -4, 29,
                         46, 7, 32],
                        [34, -52, -76, -46, -31, 13, -55, -1, 13, -54, 1, 18, 49, -2, 29,
                         45, 9, 33],
                        [33, -54, -77, -46, -30, 15, -55, -2, 15, -53, 2, 19, 49, 0, 29,
                         46, 11, 31],
                        [14, -52, -77, -44, -32, 16, -54, -6, 16, -53, 1, 20, 48, 3, 30,
                         44, 17, 31],
                        [27, -52, -78, -45, -30, 17, -54, -2, 16, -53, 2, 20, 48, 0, 30,
                         43, 18, 32],
                        [27, -60, -79, -45, -29, 19, -54, 0, 16, -53, 2, 20, 48, 2, 30,
                         43, 20, 31],
                        [36, -64, -78, -53, 2, 20, -48, -23, 19, -54, 0, 16, 48, 0, 30,
                         44, 19, 30],
                        [49, -43, -78, -50, -22, 14, -55, 0, 14, -53, 3, 19, 47, -7, 31,
                         42, 11, 36],
                        [58, -39, -80, -51, -20, 15, -55, 1, 15, -53, 3, 21, 46, -9, 32,
                         42, 8, 37],
                        [60, -40, -82, -50, -20, 18, -54, 1, 16, -52, 4, 21, 46, -6, 32,
                         43, 11, 35],
                        [67, -39, -83, -52, 5, 22, -51, -15, 18, -54, 4, 17, 49, -9, 27,
                         46, 8, 32],
                        [75, -31, -85, -52, 4, 22, -51, -14, 20, -54, 4, 16, 51, -10, 23,
                         49, 7, 28],
                        [74, -32, -85, -51, -16, 19, -54, 4, 16, -52, 6, 21, 50, -10, 23,
                         49, 6, 28],
                        [68, -35, -84, -50, -18, 19, -54, 2, 16, -52, 4, 21, 50, -8, 24,
                         49, 8, 28],
                        [54, -41, -82, -49, -21, 19, -54, 0, 16, -53, 3, 21, 51, -4, 25,
                         48, 13, 27],
                        [64, -38, -83, -49, -19, 20, -54, 2, 17, -52, 5, 22, 51, -6, 23,
                         49, 11, 26],
                        [63, -37, -82, -50, -19, 18, -54, 1, 16, -52, 4, 21, 51, -7, 24,
                         48, 9, 28],
                        [66, -40, -83, -50, -17, 20, -54, 3, 17, -52, 6, 21, 51, -8, 24,
                         49, 9, 27],
                        [65, -38, -83, -50, -17, 19, -54, 2, 16, -52, 5, 21, 51, -8, 24,
                         48, 9, 28],
                        [64, -35, -83, -50, -19, 18, -55, 1, 15, -53, 4, 21, 51, -8, 23,
                         49, 9, 27],
                        [68, -34, -84, -51, -16, 18, -54, 2, 15, -52, 5, 21, 51, -9, 22,
                         49, 9, 27],
                        [68, -35, -83, -50, -18, 18, -55, 2, 15, -52, 6, 21, 52, -9, 20,
                         50, 8, 25],
                        [65, -33, -83, -50, -20, 17, -55, 1, 15, -53, 5, 20, 52, -8, 21,
                         50, 9, 25],
                        [12, -100, -80, -51, -15, 20, -54, -1, 18, -53, 4, 20,
                         49, 8, 26, 46, 24, 21],
                        [-34, -130, -84, -48, -18, 23, -53, -2, 21, -53, 4, 20,
                         44, 17, 31, 36, 34, 27],
                        [-47, -161, -86, -50, -11, 25, -52, 0, 22, -52, 6, 20,
                         43, 20, 30, 35, 37, 24],
                        [-27, -148, -86, -52, -7, 21, -53, 0, 21, -53, 6, 20,
                         44, 17, 32, 35, 35, 26],
                        [-18, -162, -85, -53, 0, 19, -52, 6, 22, -52, 12, 19,
                         45, 19, 27, 36, 38, 20],
                        [-46, -163, -86, -52, -3, 22, -51, 4, 23, -52, 11, 20,
                         45, 21, 27, 34, 40, 20],
                        [-37, -152, -85, -52, -5, 21, -52, 0, 22, -52, 9, 20,
                         45, 18, 29, 34, 38, 24],
                        [-28, -132, -84, -53, -5, 20, -52, -1, 22, -52, 7, 21,
                         44, 17, 31, 34, 37, 25],
                        [-25, -136, -84, -53, -4, 20, -52, 0, 22, -52, 8, 21,
                         44, 17, 31, 35, 37, 25],
                        [-17, -143, -84, -52, -6, 21, -52, 0, 22, -52, 9, 21,
                         45, 17, 29, 36, 37, 23],
                        [-20, -141, -84, -52, -8, 21, -52, 2, 22, -52, 8, 21,
                         46, 17, 28, 37, 37, 22],
                        [-4, -130, -83, -52, -7, 20, -52, 2, 21, -52, 6, 21,
                         46, 15, 30, 37, 35, 24],
                        [4, -122, -82, -53, -6, 19, -52, 3, 22, -52, 6, 21,
                         45, 14, 31, 37, 34, 26],
                        [-12, -148, -82, -52, -5, 21, -52, 3, 22, -52, 9, 21,
                         45, 19, 29, 36, 38, 22]
                        ], "float32")
    static4 = np.array([[12, -141, -79, -57, 0, 3, -54, -15, 7, -34, -33, 30,
                         -57, 2, 2, 19, 32, 42],
                        [24, -152, -80, -56, 10, 2, -57, 2, 2, -54, -13, 8,
                         -35, -30, 33, 24, 33, 39],
                        [33, -156, -80, -55, 13, 2, -57, 1, 1, -55, -11, 8,
                         -37, -27, 33, 24, 33, 39],
                        [51, -164, -80, -53, 19, 2, -57, 2, 0, -56, -7, 6,
                         -39, -23, 34, 33, 29, 35],
                        [48, -166, -79, -53, 19, 1, -57, 2, 2, -56, -7, 6,
                         -39, -21, 35, 34, 30, 33],
                        [41, -166, -78, -55, 13, 0, -57, 2, 2, -56, -7, 6,
                         -39, -19, 36, 34, 33, 31],
                        [46, -168, -77, -55, 13, 0, -57, 4, 0, -56, -5, 3,
                         -40, -16, 36, 35, 32, 31],
                        [46, -170, -77, -55, 12, -2, -57, 4, 0, -57, -2, 4,
                         -40, -15, 37, 36, 32, 29],
                        [48, -175, -75, -54, 15, -4, -56, 8, -1, -57, 2, 0,
                         -42, -7, 37, 37, 32, 27],
                        [47, -175, -77, -55, 14, 0, -56, 8, 0, -57, -2, 3,
                         -40, -10, 39, 39, 33, 25],
                        [40, -172, -75, -55, 13, 0, -56, 6, 1, -57, -3, 3,
                         -40, -11, 38, 38, 34, 25],
                        [39, -169, -79, -57, 5, 1, -56, -9, 6, -37, -18, 38,
                         -56, 8, 3, 34, 35, 28],
                        [57, -161, -74, -53, 21, -1, -54, 17, 2, -56, 6, 2,
                         -47, -12, 30, 36, 22, 38],
                        [37, -123, -74, -45, -24, 24, -56, 11, 3, -56, 4, 6,
                         -57, 0, 3, 27, 23, 44],
                        [3, -124, -78, -53, 20, 2, -56, 0, 6, -54, -11, 11,
                         -36, -33, 27, 21, 30, 43],
                        [0, -144, -77, -55, 14, 7, -56, 6, 6, -55, -12, 9,
                         -41, -23, 31, 22, 36, 37],
                        [-14, -135, -80, -56, 4, 5, -56, -1, 5, -53, -17, 11,
                         -34, -33, 30, 24, 33, 39],
                        [41, -164, -77, -55, 0, 13, -42, -14, 34, -55, 14, 5,
                         -55, 13, 4, 31, 33, 33],
                        [35, -109, -74, -44, -27, 22, -54, 16, 1, -57, 0, 5,
                         -56, -6, 5, 23, 22, 46],
                        [30, -114, -73, -46, -25, 22, -53, 20, 0, -56, 1, 6,
                         -57, -1, 5, 16, 25, 48],
                        [56, -47, -78, -46, -30, 13, -52, 20, 8, -57, 4, 1, -56, 1, 6,
                         23, 5, 52],
                        [47, -45, -77, -55, 15, 1, -56, 7, 1, -56, -2, 5, -45, -33, 10,
                         24, 5, 51],
                        [47, -171, -79, -53, 19, 3, -55, 10, 8, -44, -7, 35,
                         -53, 21, 0, 36, 33, 29],
                        [37, -168, -78, -54, 17, 3, -56, 10, 3, -56, 7, 6,
                         -44, -12, 33, 35, 35, 27],
                        [5, -174, -87, -55, -5, 13, -34, -25, 38, -56, 1, 8,
                         -56, 2, 6, 32, 39, 26],
                        [-1, -153, -82, -56, -1, 6, -55, -10, 7, -35, -32, 31,
                         -57, 2, 4, 28, 35, 35],
                        [-8, -151, -81, -57, 2, 4, -56, -3, 5, -55, -13, 8,
                         -35, -32, 31, 26, 37, 34],
                        [-18, -161, -83, -57, -1, 4, -53, -15, 12, -34, -28, 35,
                         -57, 1, 4, 26, 40, 30],
                        [0, -146, -80, -54, -14, 10, -36, -32, 29, -57, 2, 3,
                         -56, 0, 5, 26, 35, 36],
                        [-4, -159, -83, -56, 0, 6, -53, -13, 14, -37, -28, 33,
                         -56, 3, 6, 26, 38, 33],
                        [-9, -145, -80, -53, -15, 11, -35, -33, 30, -56, 0, 6,
                         -56, -2, 6, 25, 35, 37],
                        [-8, -141, -81, -54, -14, 11, -38, -32, 28, -56, -3, 5,
                         -56, -4, 4, 24, 34, 38],
                        [-1, -162, -84, -54, -12, 12, -35, -29, 34, -57, -1, 5,
                         -57, -3, 3, 29, 37, 31],
                        [59, -179, -87, -55, -4, 13, -35, -20, 40, -56, 2, 5,
                         -56, 2, 6, 33, 39, 23],
                        [-37, -151, -83, -52, -20, 9, -33, -34, 31, -56, -4, 6,
                         -56, -3, 4, 25, 37, 35],
                        [-38, -135, -82, -56, 2, 6, -56, -1, 6, -51, -24, 8,
                         -33, -37, 28, 23, 35, 38],
                        [-36, -131, -80, -51, -24, 9, -34, -36, 28, -56, -2, 6,
                         -56, -3, 5, 21, 36, 38],
                        [-26, -131, -80, -52, -22, 9, -37, -33, 27, -56, -4, 4,
                         -56, -3, 5, 23, 34, 38],
                        [-17, -151, -83, -52, -18, 12, 27, 35, 35, -40, -27, 30,
                         -57, -2, 4, -56, -4, 4],
                        [-32, -148, -84, -57, 0, 5, -56, -5, 5, -51, -22, 9,
                         -38, -31, 29, 27, 34, 36],
                        [-31, -149, -82, -52, -20, 11, 24, 38, 34, -39, -27, 30,
                         -56, 0, 7, -56, 0, 6],
                        [-35, -142, -80, -56, 9, 2, -57, -1, 5, -51, -22, 10,
                         -37, -31, 29, 22, 38, 35],
                        [-3, -161, -83, -51, 25, 1, -56, 4, 5, -53, -16, 13,
                         -37, -26, 34, 28, 37, 32],
                        [-32, -152, -83, -53, 19, 2, -57, 0, 5, -51, -21, 10,
                         -36, -30, 31, 26, 36, 35],
                        [-26, -153, -84, -52, 21, 3, -56, 0, 6, -52, -21, 10,
                         -35, -32, 31, 27, 35, 35],
                        [-17, -143, -81, -53, 21, 1, -57, 1, 4, -52, -20, 9,
                         -36, -31, 29, 26, 35, 36],
                        [-11, -138, -79, -52, 22, 0, -57, 1, 5, -53, -18, 10,
                         -37, -32, 28, 25, 34, 37],
                        [3, -138, -77, -50, 27, 0, -56, 0, 5, -54, -14, 10,
                         -39, -30, 27, 24, 34, 39],
                        [-8, -133, -78, -51, 25, 1, -56, 1, 6, -53, -16, 11,
                         -36, -34, 27, 23, 34, 39],
                        [-16, -144, -79, -51, 25, 1, -57, 2, 4, -53, -16, 12,
                         -36, -32, 30, 24, 37, 35]
                        ], "float32")
    static5 = np.array([[39, -5, 6, -9, -30, -47, 22, -3, -52, -9, -29, -47, -21, -53, 0,
                         -35, -44, -3],
                        [40, -4, 6, -9, -26, -49, -8, -26, -50, 22, -1, -52, -21, -53, 2,
                         -35, -44, -1],
                        [41, -3, 6, -8, -23, -51, -6, -23, -51, 21, 0, -52, -20, -53, 3,
                         -35, -44, 0],
                        [41, -2, 7, -8, -23, -51, -6, -23, -51, 21, 0, -52, -20, -53, 3,
                         -35, -44, 0],
                        [39, -1, 8, -6, -26, -50, -6, -27, -49, 22, -1, -52, -20, -53, 3,
                         -36, -44, 0],
                        [37, -1, 9, -7, -28, -49, -6, -27, -49, 21, -3, -52, -21, -52, 4,
                         -36, -44, 0],
                        [35, -2, 10, -7, -28, -49, -7, -27, -49, 20, -4, -53, -22, -52, 4,
                         -35, -44, 0],
                        [34, -3, 9, -8, -26, -50, -7, -25, -50, 19, -5, -53, -22, -52, 4,
                         -34, -45, 0],
                        [34, -3, 9, -9, -26, -50, -7, -25, -50, 20, -5, -53, -22, -52, 4,
                         -33, -46, 0],
                        [34, -2, 9, -8, -24, -51, -6, -24, -51, 20, -4, -53, -21, -52, 2,
                         -32, -47, 0],
                        [34, -1, 9, -8, -25, -50, -6, -25, -51, 20, -4, -53, -20, -53, 1,
                         -30, -48, 0],
                        [33, -1, 8, -8, -28, -49, -7, -28, -49, 20, -5, -53, -20, -53, 2,
                         -29, -48, 0],
                        [32, -1, 8, -8, -29, -48, -7, -28, -48, 20, -7, -52, -20, -53, 2,
                         -29, -49, 0],
                        [31, -3, 8, -9, -30, -47, -8, -30, -47, 20, -9, -52, -21, -53, 3,
                         -29, -49, 0],
                        [30, -3, 8, -10, -31, -47, -9, -30, -47, 20, -10, -52, -21, -52, 2,
                         -29, -49, 0],
                        [30, -3, 8, -10, -31, -46, -9, -30, -47, 20, -9, -52, -21, -53, 0,
                         -29, -49, -2],
                        [30, -2, 8, -8, -31, -47, 19, -8, -53, -9, -30, -47, -20, -53, -2,
                         -27, -50, -5],
                        [29, -3, 7, -8, -32, -46, 19, -9, -53, -9, -32, -46, -20, -53, -4,
                         -26, -50, -6],
                        [29, -3, 7, -9, -31, -46, -8, -31, -47, 18, -9, -53, -20, -53, -4,
                         -27, -49, -7],
                        [29, -3, 7, -10, -28, -48, -9, -28, -48, 17, -9, -53, -20, -53, -4,
                         -27, -49, -7],
                        [29, -2, 8, -10, -29, -48, -8, -29, -48, 17, -8, -53, -20, -53, -4,
                         -26, -50, -7],
                        [29, -3, 7, -10, -30, -47, -9, -30, -47, 18, -8, -53, -20, -53, -4,
                         -26, -49, -7],
                        [29, -5, 7, -11, -32, -45, -10, -32, -46, 18, -10, -53, -21, -52, -4,
                         -28, -49, -7],
                        [29, -5, 8, -11, -33, -45, -11, -32, -45, 19, -11, -52, -22, -52, -4,
                         -28, -48, -7],
                        [29, -5, 8, -11, -32, -45, -11, -32, -46, 19, -11, -52, -22, -52, -3,
                         -29, -48, -7],
                        [30, -6, 8, -12, -31, -46, -11, -30, -47, 19, -11, -52, -22, -52, -4,
                         -29, -48, -7],
                        [30, -6, 8, -13, -30, -46, -11, -30, -47, 18, -11, -52, -22, -52, -5,
                         -30, -47, -8],
                        [29, -7, 7, -13, -32, -45, -12, -31, -45, 17, -12, -52, -23, -52, -3,
                         -31, -47, -6],
                        [27, -7, 6, -13, -34, -43, -13, -33, -44, 17, -13, -52, -23, -52, -2,
                         -31, -47, -5],
                        [26, -5, 5, -13, -32, -44, -11, -31, -46, 17, -13, -52, -20, -53, -1,
                         -28, -49, -4],
                        [27, -1, 4, -11, -31, -46, -8, -31, -46, 18, -10, -53, -17, -54, -1,
                         -25, -51, -4],
                        [29, -2, 4, -10, -30, -47, -9, -30, -47, 18, -9, -53, -18, -54, -2,
                         -26, -50, -5],
                        [29, -3, 4, -11, -30, -47, -9, -31, -47, 21, -11, -51, -19, -53, 0,
                         -27, -49, -4],
                        [28, -5, 2, -12, -32, -45, -10, -34, -44, 24, -13, -49, -20, -53, 2,
                         -29, -49, -1],
                        [30, -6, 0, -12, -28, -48, -10, -30, -47, 20, -9, -52, -19, -53, 3,
                         -28, -49, 0],
                        [25, -5, -5, -10, -33, -45, 15, -8, -54, -13, -32, -45, -16, -54, 1,
                         -24, -51, 0],
                        [24, -1, -3, -8, -32, -46, -6, -33, -46, 17, -9, -53, -14, -55, -4,
                         -22, -52, -6],
                        [29, 0, -2, -7, -28, -49, -4, -29, -48, 18, -6, -53, -14, -54, -10,
                         -22, -51, -12],
                        [32, 0, 0, -7, -29, -48, -5, -30, -48, 18, -4, -54, -14, -54, -6,
                         -24, -50, -10],
                        [35, 0, 0, -7, -28, -49, -5, -29, -48, 20, -3, -53, -15, -55, -3,
                         -27, -49, -7],
                        [40, 0, 1, -5, -24, -51, -4, -26, -50, 22, 0, -52, -15, -54, -5,
                         -28, -48, -9],
                        [40, 0, 4, -5, -24, -51, -5, -26, -50, 22, 0, -52, -16, -54, -5,
                         -30, -47, -8],
                        [40, 1, 5, -5, -25, -51, -4, -26, -50, 20, 0, -53, -16, -54, -6,
                         -30, -47, -8],
                        [41, 2, 6, -5, -24, -51, -4, -24, -51, 20, 1, -53, -16, -54, -6,
                         -30, -47, -9],
                        [41, 2, 6, -6, -23, -51, -5, -23, -51, 20, 1, -53, -16, -54, -6,
                         -30, -47, -9],
                        [41, 2, 6, -6, -24, -51, -5, -24, -51, 20, 1, -53, -16, -54, -6,
                         -30, -47, -9],
                        [41, 1, 6, -6, -25, -50, -5, -26, -50, 20, 1, -53, -16, -54, -6,
                         -30, -47, -9],
                        [42, -1, 5, -7, -26, -50, -6, -27, -49, 18, 1, -54, -17, -54, -5,
                         -31, -46, -9],
                        [41, -1, 2, -7, -27, -49, -7, -28, -49, 18, 0, -54, -17, -54, -3,
                         -32, -46, -6],
                        [40, -2, 2, -7, -27, -49, -6, -28, -49, 19, 0, -53, -16, -54, -1,
                         -32, -46, -5]
                        ], "float32")
    static6 = np.array([[31, -4, -10, -18, 42, -34, 0, 42, -37, 4, 42, -38, 20, 34, -40,
                         18, -3, -54],
                        [31, -5, -9, -17, 42, -34, 0, 42, -38, 5, 42, -38, 21, 34, -40,
                         18, -3, -54],
                        [31, -6, -7, -16, 42, -34, 1, 42, -38, 6, 42, -38, 22, 34, -40,
                         18, -3, -54],
                        [31, -7, -6, -14, 43, -34, 3, 42, -37, 8, 42, -37, 23, 34, -39,
                         19, -3, -53],
                        [31, -8, -5, -13, 43, -35, 3, 42, -37, 8, 42, -37, 24, 33, -39,
                         19, -3, -53],
                        [32, -9, -4, -12, 43, -35, 4, 42, -37, 9, 42, -37, 25, 33, -39,
                         19, -3, -53],
                        [31, -9, -4, -11, 43, -35, 5, 42, -37, 10, 42, -37, 25, 33, -39,
                         20, -4, -53],
                        [31, -9, -4, -11, 43, -35, 5, 43, -37, 10, 42, -37, 25, 33, -38,
                         20, -4, -53],
                        [31, -9, -4, -11, 43, -35, 5, 42, -37, 10, 42, -37, 26, 32, -38,
                         20, -4, -53],
                        [31, -9, -3, -11, 43, -35, 6, 42, -37, 11, 42, -37, 26, 32, -38,
                         20, -5, -53],
                        [30, -9, -3, -10, 43, -36, 6, 42, -37, 11, 41, -37, 27, 31, -38,
                         20, -6, -53],
                        [30, -9, -3, -11, 43, -35, 6, 42, -37, 11, 41, -37, 27, 32, -38,
                         20, -6, -53],
                        [28, -9, -4, -11, 43, -35, 5, 42, -37, 10, 41, -37, 26, 32, -38,
                         20, -8, -52],
                        [28, -8, -5, -13, 42, -35, 4, 42, -37, 9, 41, -37, 25, 33, -39,
                         19, -8, -53],
                        [28, -8, -6, -14, 41, -36, 2, 42, -38, 7, 41, -39, 23, 32, -40,
                         18, -8, -53],
                        [27, -8, -7, -15, 41, -36, 2, 41, -39, 7, 41, -39, 23, 32, -41,
                         18, -9, -53],
                        [27, -9, -8, -14, 41, -36, 2, 41, -39, 7, 40, -39, 23, 32, -41,
                         17, -9, -53],
                        [27, -9, -7, -13, 41, -37, 3, 41, -39, 8, 40, -39, 24, 31, -40,
                         17, -9, -53],
                        [28, -9, -6, -12, 41, -37, 4, 41, -39, 9, 40, -39, 25, 31, -40,
                         18, -8, -53],
                        [28, -9, -5, -12, 41, -37, 5, 41, -38, 10, 40, -38, 26, 31, -39,
                         19, -8, -53],
                        [28, -9, -4, -11, 41, -37, 5, 41, -38, 10, 40, -38, 26, 31, -39,
                         19, -8, -53],
                        [28, -9, -4, -11, 42, -37, 5, 41, -38, 10, 41, -38, 26, 31, -39,
                         20, -7, -53],
                        [28, -8, -5, -12, 41, -37, 4, 41, -38, 9, 40, -39, 26, 31, -39,
                         19, -7, -53],
                        [28, -9, -6, -13, 41, -37, 3, 41, -39, 9, 40, -39, 25, 31, -40,
                         18, -7, -53],
                        [27, -9, -7, -14, 41, -37, 3, 41, -39, 8, 40, -39, 24, 31, -41,
                         17, -7, -53],
                        [27, -9, -6, -14, 40, -37, 3, 41, -39, 8, 40, -39, 25, 30, -41,
                         17, -8, -53],
                        [27, -9, -6, -14, 40, -37, 3, 41, -39, 8, 40, -39, 25, 31, -41,
                         18, -8, -53],
                        [27, -9, -6, -14, 40, -37, 3, 40, -40, 8, 39, -40, 24, 31, -41,
                         17, -8, -53],
                        [26, -9, -6, -14, 39, -38, 2, 39, -41, 8, 38, -41, 23, 29, -42,
                         17, -9, -53],
                        [26, -9, -7, -15, 39, -38, 1, 39, -41, 7, 38, -41, 22, 29, -43,
                         16, -9, -53],
                        [27, -9, -8, -16, 39, -37, 1, 40, -40, 6, 39, -41, 21, 31, -42,
                         16, -8, -54],
                        [28, -8, -8, -16, 40, -36, 0, 41, -39, 6, 40, -40, 21, 32, -41,
                         16, -5, -54],
                        [30, -8, -8, -15, 42, -34, 1, 43, -37, 6, 41, -38, 21, 34, -40,
                         16, -3, -54],
                        [31, -10, -7, -13, 44, -33, 2, 44, -36, 7, 42, -37, 22, 34, -39,
                         16, -3, -54],
                        [32, -11, -7, -12, 45, -32, 2, 43, -37, 7, 42, -37, 22, 34, -39,
                         17, -4, -54],
                        [33, -11, -7, -12, 45, -31, 2, 44, -36, 8, 43, -36, 22, 35, -39,
                         17, -3, -54],
                        [32, -10, -7, -12, 45, -32, 3, 45, -35, 8, 43, -36, 22, 35, -38,
                         19, -4, -53],
                        [31, -12, -7, -12, 46, -31, 3, 45, -35, 8, 43, -35, 23, 35, -38,
                         19, -6, -53],
                        [30, -11, -7, -13, 45, -32, 2, 45, -35, 8, 43, -36, 22, 35, -38,
                         19, -7, -53],
                        [31, -11, -7, -14, 45, -31, 2, 45, -35, 8, 43, -36, 22, 35, -38,
                         18, -5, -54],
                        [31, -10, -7, -14, 45, -32, 2, 44, -35, 7, 43, -36, 22, 35, -39,
                         17, -4, -54],
                        [31, -9, -7, -15, 44, -32, 2, 44, -35, 7, 43, -36, 22, 35, -39,
                         17, -4, -54],
                        [31, -9, -8, -14, 44, -33, 2, 44, -35, 7, 43, -37, 21, 35, -39,
                         17, -4, -54],
                        [31, -10, -7, -14, 44, -33, 2, 44, -35, 7, 43, -36, 22, 35, -39,
                         17, -4, -54],
                        [31, -10, -6, -13, 44, -33, 3, 44, -35, 8, 43, -36, 23, 34, -38,
                         18, -4, -54],
                        [31, -10, -6, -13, 44, -33, 3, 44, -35, 9, 43, -36, 23, 35, -38,
                         18, -4, -54],
                        [31, -9, -6, -13, 45, -32, 3, 44, -36, 9, 43, -36, 22, 35, -39,
                         20, -5, -53],
                        [31, -10, -6, -13, 44, -32, 3, 44, -35, 9, 43, -35, 23, 35, -38,
                         18, -5, -53],
                        [31, -11, -6, -13, 44, -32, 3, 44, -35, 9, 43, -36, 23, 34, -39,
                         17, -5, -54],
                        [31, -11, -7, -13, 44, -33, 3, 44, -36, 9, 43, -36, 23, 34, -39,
                         17, -5, -54]
                        ], "float32")
    static7 = np.array([[-84, 63, -34, -20, -48, -21, 2, -51, -25, 8, -52, 21, -3, 48, 29,
                         -11, 45, 33],
                        [-84, 64, -35, -20, -49, -21, 2, -51, -25, 7, -52, 21, -3, 49, 29,
                         -10, 45, 32],
                        [-84, 64, -38, -20, -49, -21, 1, -51, -25, 7, -52, 22, -3, 50, 27,
                         -10, 46, 31],
                        [-84, 66, -39, -20, -49, -20, 2, -51, -24, 9, -52, 22, -3, 50, 26,
                         -11, 47, 30],
                        [-85, 69, -39, -19, -49, -20, 2, -51, -24, 11, -51, 22, -4, 51, 25,
                         -10, 47, 29],
                        [-85, 68, -35, -19, -49, -20, 3, -51, -24, 5, -52, 21, -4, 51, 24,
                         -10, 48, 29],
                        [-84, 65, -29, -19, -49, -21, 3, -51, -24, 1, -53, 19, -4, 51, 25,
                         -10, 47, 30],
                        [-84, 64, -31, -19, -49, -21, 2, -51, -24, 1, -53, 19, -4, 50, 27,
                         -10, 47, 30],
                        [-82, 60, -26, -19, -48, -22, 2, -51, -25, 0, -54, 17, -3, 48, 30,
                         -8, 45, 33],
                        [-83, 63, -30, -19, -49, -21, 2, -51, -25, 4, -54, 18, -3, 48, 30,
                         -8, 45, 33],
                        [-84, 66, -32, -19, -49, -21, 2, -51, -24, 10, -52, 20, -3, 48, 30,
                         -8, 45, 34],
                        [-84, 67, -33, -18, -49, -20, 3, -51, -24, 9, -52, 21, -3, 48, 29,
                         -8, 44, 34],
                        [-84, 66, -33, -18, -49, -20, 2, -51, -24, 8, -52, 20, -3, 48, 30,
                         -8, 44, 34],
                        [-84, 66, -32, -18, -49, -20, 2, -51, -24, 8, -52, 20, -3, 48, 30,
                         -7, 44, 35],
                        [-84, 66, -32, -18, -49, -20, 2, -51, -24, 8, -52, 21, -3, 48, 30,
                         -8, 44, 35],
                        [-84, 66, -32, -18, -49, -20, 2, -51, -24, 7, -52, 21, -3, 48, 30,
                         -8, 44, 35],
                        [-84, 66, -33, -18, -50, -20, 2, -51, -23, 5, -52, 21, -3, 47, 31,
                         -9, 44, 35],
                        [-84, 66, -33, -18, -50, -20, 2, -52, -23, 5, -52, 21, -3, 47, 32,
                         -9, 43, 35],
                        [-84, 66, -32, -18, -50, -20, 2, -52, -23, 6, -52, 21, -3, 46, 33,
                         -8, 43, 36],
                        [-84, 65, -31, -18, -50, -20, 2, -52, -23, 5, -53, 20, -4, 46, 33,
                         -8, 42, 36],
                        [-85, 65, -31, -18, -50, -20, 3, -52, -23, 4, -53, 20, -4, 46, 33,
                         -9, 43, 36],
                        [-85, 68, -30, -17, -50, -20, 3, -52, -22, 4, -53, 21, -5, 46, 33,
                         -9, 43, 36],
                        [-85, 71, -24, -16, -50, -20, 5, -52, -22, 3, -53, 21, -5, 46, 33,
                         -10, 42, 36],
                        [-85, 65, -20, -15, -50, -21, 5, -52, -22, 2, -53, 20, -6, 46, 33,
                         -12, 42, 36],
                        [-85, 61, -20, -14, -50, -22, 6, -52, -21, 0, -53, 20, -7, 46, 33,
                         -13, 42, 36],
                        [-85, 59, -17, -14, -50, -22, 6, -52, -21, 0, -53, 20, -8, 46, 32,
                         -14, 42, 35],
                        [-85, 54, -16, -13, -50, -22, 6, -52, -20, -1, -53, 20, -8, 46, 32,
                         -14, 42, 35],
                        [-84, 38, -19, -13, -50, -23, 6, -52, -21, -1, -54, 18, -9, 45, 33,
                         -15, 41, 36],
                        [-84, 40, -18, -13, -50, -23, 6, -52, -21, -1, -54, 18, -9, 45, 33,
                         -14, 41, 36],
                        [-84, 52, -4, -13, -50, -22, 7, -52, -21, 0, -54, 18, -9, 45, 33,
                         -14, 41, 36],
                        [-84, 55, 5, -12, -50, -22, 7, -52, -22, 1, -54, 16, -9, 45, 33,
                         -15, 40, 37],
                        [-84, 58, 2, -13, -50, -22, 7, -52, -22, 1, -54, 17, -9, 45, 33,
                         -14, 41, 36],
                        [-84, 55, -1, -13, -50, -22, 6, -52, -22, 1, -54, 17, -9, 45, 33,
                         -14, 41, 36],
                        [-84, 50, -9, -13, -50, -23, 5, -52, -23, 1, -54, 16, -9, 45, 33,
                         -14, 41, 36],
                        [-84, 45, -20, -14, -50, -23, 5, -51, -23, 1, -54, 17, -9, 45, 33,
                         -14, 42, 36],
                        [-84, 37, -30, -14, -50, -23, 5, -51, -23, 1, -54, 17, -8, 46, 32,
                         -14, 42, 35],
                        [-85, 39, -31, -14, -50, -22, 5, -51, -23, 2, -54, 18, -9, 46, 32,
                         -15, 42, 34],
                        [-85, 48, -27, -13, -50, -22, 5, -51, -23, 1, -54, 18, -8, 46, 32,
                         -15, 42, 34],
                        [-85, 46, -25, -13, -50, -22, 5, -51, -23, 1, -54, 18, -9, 46, 32,
                         -15, 42, 34],
                        [-85, 44, -28, -13, -50, -22, 5, -52, -23, 1, -54, 18, -9, 46, 32,
                         -16, 42, 34],
                        [-85, 44, -30, -14, -50, -22, 4, -51, -23, 1, -54, 18, -9, 46, 32,
                         -16, 42, 34],
                        [-85, 46, -31, -14, -50, -22, 4, -51, -23, 1, -53, 19, -9, 46, 32,
                         -16, 42, 34],
                        [-85, 49, -30, -14, -50, -22, 4, -52, -23, 1, -53, 19, -8, 46, 32,
                         -16, 42, 34],
                        [-85, 49, -28, -14, -50, -22, 4, -52, -23, 1, -53, 19, -9, 46, 32,
                         -16, 42, 34],
                        [-85, 47, -28, -13, -50, -22, 4, -52, -23, 1, -53, 19, -9, 46, 32,
                         -17, 42, 34],
                        [-85, 45, -31, -13, -51, -22, 5, -52, -23, 0, -53, 19, -9, 46, 32,
                         -17, 42, 34],
                        [-85, 41, -32, -13, -50, -22, 5, -51, -23, 0, -54, 18, -8, 46, 32,
                         -18, 42, 33],
                        [-84, 40, -32, -13, -50, -23, 4, -51, -23, 0, -54, 17, -8, 46, 32,
                         -17, 42, 34],
                        [-84, 41, -33, -13, -50, -23, 4, -51, -23, 2, -54, 18, -8, 46, 32,
                         -17, 42, 34],
                        [-85, 43, -35, -13, -50, -23, 4, -51, -23, 3, -54, 18, -8, 46, 32,
                         -16, 42, 34]
                        ], "float32")
    static8 = np.array([[45, -39, -33, -16, 48, -25, 0, 46, -33, 12, 34, -43, -42, 6, -38,
                         -18, -53, -8],
                        [45, -37, -35, -18, 48, -24, -1, 46, -33, 11, 35, -43, -42, 5, -38,
                         -16, -54, -8],
                        [46, -36, -37, -19, 48, -24, -2, 47, -32, 11, 36, -42, -41, 6, -38,
                         -15, -53, -11],
                        [46, -36, -37, -18, 47, -25, -2, 46, -33, 11, 35, -43, -41, 6, -38,
                         -12, -55, -8],
                        [45, -35, -37, -19, 46, -26, -3, 45, -35, 10, 34, -44, -41, 6, -38,
                         -8, -56, -6],
                        [45, -35, -37, -20, 45, -27, -4, 44, -35, 8, 33, -45, -42, 6, -38,
                         -7, -56, -4],
                        [44, -35, -37, -20, 45, -27, -4, 44, -35, 8, 33, -45, -42, 6, -38,
                         -7, -56, -4],
                        [44, -35, -37, -20, 45, -27, -4, 44, -36, 8, 32, -46, -42, 4, -38,
                         -7, -56, -3],
                        [43, -35, -37, -21, 45, -28, -5, 43, -36, 7, 32, -46, -42, 4, -38,
                         -8, -56, -3],
                        [43, -34, -37, -21, 44, -28, -5, 43, -36, 7, 32, -46, -41, 4, -39,
                         -7, -56, -3],
                        [43, -34, -36, -21, 44, -28, -6, 43, -37, 7, 31, -47, -41, 4, -39,
                         -7, -56, -4],
                        [42, -34, -36, -22, 44, -28, -6, 42, -37, 6, 31, -47, -41, 3, -39,
                         -5, -57, -2],
                        [42, -34, -37, -22, 43, -28, -7, 42, -38, 6, 30, -47, -41, 3, -39,
                         -7, -56, -3],
                        [42, -33, -37, -23, 43, -28, -8, 42, -37, 5, 30, -47, -41, 2, -39,
                         -6, -56, -3],
                        [41, -33, -38, -23, 43, -28, -8, 42, -37, 4, 31, -47, -41, 2, -38,
                         -6, -56, -3],
                        [41, -32, -38, -23, 43, -28, -8, 42, -37, 4, 31, -47, -42, 2, -38,
                         -7, -56, -3],
                        [41, -32, -38, -23, 43, -29, -8, 42, -37, 4, 30, -48, -41, 2, -38,
                         -7, -56, -3],
                        [41, -32, -38, -23, 43, -28, -8, 42, -37, 4, 30, -47, -41, 2, -39,
                         -7, -56, -4],
                        [40, -32, -38, -23, 43, -28, -9, 41, -38, 4, 30, -47, -41, 2, -39,
                         -8, -56, -4],
                        [41, -32, -38, -24, 43, -29, -9, 41, -38, 4, 31, -47, -41, 3, -39,
                         -8, -56, -4],
                        [41, -32, -38, -24, 43, -28, -8, 42, -37, 4, 31, -47, -42, 3, -38,
                         -9, -56, -6],
                        [42, -32, -38, -24, 43, -28, -7, 42, -37, 5, 32, -47, -42, 3, -38,
                         -8, -56, -5],
                        [42, -32, -38, -24, 43, -28, -7, 42, -37, 5, 31, -47, -42, 3, -38,
                         -10, -55, -6],
                        [42, -32, -38, -24, 43, -28, -7, 42, -37, 6, 31, -47, -42, 3, -38,
                         -10, -55, -6],
                        [42, -32, -38, -23, 43, -28, -7, 42, -37, 6, 31, -47, -42, 3, -38,
                         -11, -55, -7],
                        [42, -32, -38, -23, 43, -28, -7, 42, -37, 6, 31, -47, -42, 3, -38,
                         -10, -55, -7],
                        [42, -32, -38, -23, 43, -28, -7, 42, -37, 6, 31, -47, -42, 3, -38,
                         -10, -55, -6],
                        [42, -32, -38, -23, 43, -28, -7, 42, -37, 6, 31, -47, -42, 3, -38,
                         -13, -55, -8],
                        [42, -32, -38, -23, 44, -27, -7, 43, -37, 6, 31, -47, -42, 3, -38,
                         -14, -54, -9],
                        [41, -31, -38, -23, 44, -27, -7, 43, -37, 6, 31, -47, -42, 3, -38,
                         -14, -54, -9],
                        [41, -31, -38, -24, 44, -27, -7, 42, -37, 5, 31, -47, -42, 3, -38,
                         -13, -55, -8],
                        [41, -31, -37, -24, 44, -27, -7, 42, -37, 5, 31, -47, -42, 3, -38,
                         -12, -55, -8],
                        [41, -31, -37, -24, 44, -27, -8, 43, -36, 5, 31, -47, -42, 3, -38,
                         -9, -56, -6],
                        [41, -31, -37, -24, 44, -27, -8, 42, -37, 4, 31, -47, -42, 2, -38,
                         -8, -56, -5],
                        [40, -31, -38, -24, 44, -27, -8, 42, -37, 5, 31, -47, -42, 2, -38,
                         -5, -56, -3],
                        [40, -31, -38, -24, 44, -27, -8, 42, -37, 5, 31, -47, -42, 1, -38,
                         -3, -57, -2],
                        [41, -31, -38, -24, 43, -27, -8, 42, -37, 5, 30, -47, -42, 1, -38,
                         -3, -57, -1],
                        [41, -31, -38, -24, 43, -27, -8, 42, -37, 5, 31, -47, -42, 1, -38,
                         -2, -57, -1],
                        [41, -31, -38, -24, 43, -27, -8, 42, -37, 6, 31, -47, -42, 1, -38,
                         0, -57, 0],
                        [41, -31, -38, -24, 43, -27, -8, 42, -37, 6, 31, -47, -42, 1, -38,
                         0, -57, 0],
                        [41, -32, -38, -24, 43, -27, -8, 42, -37, 5, 31, -47, -42, 1, -38,
                         -6, -56, -3],
                        [41, -32, -39, -25, 43, -27, -8, 42, -37, 5, 30, -47, -42, 1, -38,
                         -8, -56, -4],
                        [41, -32, -39, -25, 43, -27, -9, 42, -37, 4, 30, -48, -42, 1, -37,
                         -6, -56, -3],
                        [41, -32, -38, -25, 43, -27, -9, 42, -37, 3, 30, -48, -42, 1, -37,
                         -7, -56, -3],
                        [41, -32, -38, -25, 43, -27, -9, 42, -37, 3, 30, -48, -42, 2, -37,
                         -4, -57, -1],
                        [41, -32, -38, -25, 43, -27, -9, 42, -37, 4, 30, -48, -42, 1, -38,
                         -7, -56, -3],
                        [41, -32, -39, -25, 43, -27, -9, 42, -37, 4, 30, -48, -42, 1, -38,
                         -7, -56, -3],
                        [41, -32, -39, -25, 43, -27, -9, 42, -37, 4, 30, -48, -42, 1, -38,
                         -5, -56, -2],
                        [41, -31, -39, -25, 43, -27, -9, 42, -37, 4, 30, -48, -42, 1, -38,
                         -3, -57, 0],
                        [41, -31, -39, -25, 43, -27, -9, 42, -37, 4, 30, -48, -42, 2, -37,
                         -3, -57, -1]
                        ], "float32")
    static9 = np.array([[-96, -118, 177, 7, -38, 41, -17, -50, -19, 19, -52, -10,
                         -16, 51, 18, -24, 48, 19],
                        [-96, -118, 176, 7, -38, 41, -17, -50, -19, 19, -52, -10,
                         -16, 51, 17, -24, 47, 19],
                        [-95, -115, -179, 7, -39, 40, -17, -50, -20, 18, -53, -11,
                         -16, 51, 18, -24, 47, 20],
                        [-98, -123, -165, 5, -37, 42, -18, -50, -18, 16, -53, -9,
                         -15, 53, 15, -23, 49, 17],
                        [-98, -122, -162, 4, -37, 42, -18, -50, -19, 16, -54, -9,
                         -14, 53, 14, -23, 49, 17],
                        [-98, -124, -161, 4, -37, 42, -18, -50, -18, 15, -54, -8,
                         -14, 53, 14, -22, 49, 17],
                        [-98, -124, -157, 3, -37, 43, -18, -50, -19, 15, -54, -8,
                         -14, 53, 14, -22, 49, 17],
                        [-98, -122, -156, 3, -37, 43, -18, -50, -19, 15, -54, -8,
                         -14, 53, 13, -22, 49, 17],
                        [-97, -120, -151, 2, -38, 42, -19, -50, -19, 14, -54, -8,
                         -13, 53, 14, -22, 49, 17],
                        [-98, -122, -156, 3, -37, 43, -18, -50, -19, 14, -54, -8,
                         -13, 53, 13, -22, 49, 17],
                        [-98, -124, -158, 3, -36, 43, -18, -50, -18, 14, -54, -8,
                         -13, 54, 13, -22, 49, 16],
                        [-98, -121, -154, 3, -37, 43, -18, -50, -19, 13, -54, -9,
                         -14, 53, 15, -23, 49, 16],
                        [-98, -120, -157, 3, -36, 43, -18, -50, -18, 13, -54, -9,
                         -15, 52, 16, -23, 49, 16],
                        [-96, -114, -150, 3, -37, 43, -18, -50, -20, 13, -54, -10,
                         -16, 52, 17, -24, 49, 16],
                        [-96, -113, -147, 2, -37, 43, -18, -50, -20, 12, -54, -10,
                         -15, 52, 16, -23, 49, 16],
                        [-99, -119, -143, -20, -50, -17, 9, -56, -5, 1, -35, 45,
                         -14, 53, 13, -22, 50, 13],
                        [-103, -131, -149, 1, -31, 47, -20, -51, -16, 8, -56, -2,
                         -11, 55, 7, -20, 52, 10],
                        [-103, -131, -149, 0, -32, 47, -19, -51, -16, 8, -56, -2,
                         -11, 55, 6, -20, 52, 10],
                        [-105, -142, -151, -21, -51, -13, 7, -56, 0, 0, -31, 47,
                         -10, 55, 6, -18, 53, 10],
                        [-105, -145, -153, -21, -51, -13, 10, -56, -1, -1, -32, 47,
                         -10, 55, 6, -18, 53, 10],
                        [-104, -145, -154, -1, -33, 46, -20, -51, -14, 10, -56, -2,
                         -10, 55, 7, -18, 52, 12],
                        [-106, -145, -159, -20, -51, -13, 10, -56, -1, 0, -32, 47,
                         -11, 55, 6, -19, 52, 10],
                        [-106, -146, -163, 0, -31, 47, -20, -51, -13, 10, -56, 0,
                         -12, 55, 6, -20, 52, 10],
                        [-105, -145, -165, 0, -32, 46, -20, -51, -13, 10, -56, -1,
                         -13, 54, 8, -21, 52, 11],
                        [-105, -146, -166, -1, -33, 46, -20, -51, -13, 10, -56, 0,
                         -14, 55, 7, -21, 51, 11],
                        [-106, -147, -166, -1, -33, 46, -20, -51, -12, 9, -56, 0,
                         -13, 55, 7, -21, 51, 11],
                        [-107, -147, -163, -20, -51, -11, 8, -56, 0, -2, -31, 47,
                         -13, 55, 5, -20, 52, 9],
                        [-108, -148, -157, -22, -51, -11, 11, -56, 0, -3, -30, 48,
                         -11, 55, 6, -18, 53, 8],
                        [-108, -148, -155, -22, -51, -11, 11, -56, 0, -3, -30, 48,
                         -11, 55, 5, -18, 53, 8],
                        [-107, -149, -156, -22, -51, -12, 11, -56, 0, -2, -31, 47,
                         -10, 55, 6, -18, 53, 9],
                        [-105, -148, -153, -2, -32, 46, -21, -51, -13, 10, -56, -1,
                         -10, 55, 7, -17, 53, 11],
                        [-105, -145, -153, -3, -33, 46, -21, -51, -14, 10, -56, -1,
                         -10, 55, 7, -18, 53, 11],
                        [-104, -143, -156, -2, -33, 46, -20, -51, -14, 9, -56, -1,
                         -12, 55, 8, -19, 52, 12],
                        [-104, -142, -159, -1, -33, 46, -20, -51, -14, 9, -56, -1,
                         -13, 55, 8, -20, 52, 11],
                        [-104, -142, -165, -19, -51, -14, 8, -56, -1, 0, -33, 46,
                         -14, 54, 8, -21, 51, 12],
                        [-106, -144, -166, 0, -32, 47, -19, -52, -13, 8, -56, -1,
                         -14, 54, 7, -21, 51, 11],
                        [-107, -144, -160, -20, -51, -13, 5, -57, 0, -1, -31, 47,
                         -13, 55, 5, -20, 52, 9],
                        [-106, -141, -155, -2, -31, 47, -21, -51, -13, 7, -56, -1,
                         -11, 55, 4, -19, 53, 8],
                        [-105, -138, -153, -2, -32, 47, -21, -50, -15, 7, -56, -2,
                         -11, 55, 5, -19, 52, 10],
                        [-106, -140, -155, -1, -31, 47, -21, -51, -14, 7, -56, -1,
                         -12, 55, 7, -20, 52, 9],
                        [-106, -141, -154, -21, -51, -14, 5, -57, -1, -1, -31, 47,
                         -11, 55, 5, -19, 52, 9],
                        [-106, -141, -154, -21, -51, -14, 4, -57, -1, -1, -31, 47,
                         -12, 55, 7, -19, 52, 9],
                        [-105, -141, -152, -2, -32, 47, -22, -50, -14, 4, -57, -1,
                         -11, 55, 6, -19, 53, 10],
                        [-105, -142, -153, -22, -50, -14, 4, -57, -1, -2, -32, 47,
                         -11, 55, 5, -19, 52, 10],
                        [-104, -138, -154, -2, -32, 46, -21, -50, -15, 4, -57, -2,
                         -12, 55, 7, -20, 52, 10],
                        [-104, -134, -155, -1, -32, 46, -20, -51, -15, 4, -57, -3,
                         -14, 55, 7, -21, 52, 10],
                        [-105, -135, -152, -1, -31, 48, -21, -51, -14, 4, -57, -1,
                         -13, 55, 6, -20, 52, 8],
                        [-106, -136, -152, -2, -30, 48, -21, -51, -14, 5, -57, -1,
                         -12, 55, 4, -20, 53, 7],
                        [-106, -137, -152, -21, -51, -14, 6, -56, 0, -1, -30, 48,
                         -12, 55, 5, -19, 53, 8],
                        [-106, -139, -152, -21, -51, -14, 7, -56, 0, -1, -30, 48,
                         -11, 55, 4, -19, 53, 8]
                        ], "float32")
    static10 = np.array([[-70, 34, -42, -48, -29, -8, -24, -43, -27, -10, -48, -29, 3, -53, -20,
                          -5, 6, 56],
                         [-71, 35, -43, -49, -27, -7, -24, -43, -27, -10, -48, -28, 2, -53, -19,
                          -4, 7, 56],
                         [-72, 34, -46, -49, -27, -4, -24, -44, -27, -10, -48, -28, 2, -53, -19,
                          -6, 9, 56],
                         [-73, 33, -48, -49, -28, -3, -24, -44, -27, -10, -48, -28, 2, -53, -20,
                          -6, 10, 55],
                         [-71, 30, -44, -49, -27, -6, -24, -43, -28, -10, -48, -28, 2, -53, -21,
                          -7, 8, 56],
                         [-71, 31, -44, -49, -28, -6, -24, -44, -26, -10, -48, -27, 2, -53, -21,
                          -7, 8, 56],
                         [-73, 32, -46, -49, -28, -4, -24, -44, -26, -11, -48, -28, 2, -53, -21,
                          -7, 10, 55],
                         [-73, 32, -46, -49, -28, -4, -24, -43, -27, -10, -48, -28, 2, -52, -21,
                          -7, 10, 55],
                         [-70, 29, -41, -49, -27, -7, -24, -43, -28, -10, -47, -29, 3, -52, -22,
                          -7, 7, 56],
                         [-69, 26, -41, -49, -27, -8, -24, -43, -28, -10, -47, -29, 3, -52, -22,
                          -8, 7, 56],
                         [-68, 25, -40, -49, -26, -8, -24, -42, -29, -10, -47, -30, 3, -52, -23,
                          -8, 6, 56],
                         [-67, 20, -40, -50, -25, -10, -24, -43, -29, -10, -47, -30, 2, -52, -23,
                          -10, 5, 56],
                         [-69, 26, -41, -49, -26, -8, -24, -44, -27, -10, -48, -28, 3, -52, -21,
                          -7, 6, 56],
                         [-72, 32, -48, -50, -26, -3, -25, -44, -25, -12, -48, -27, 2, -53, -20,
                          -6, 9, 56],
                         [-73, 34, -51, -51, -25, -2, -26, -43, -25, -13, -48, -27, 1, -53, -21,
                          -5, 10, 56],
                         [-71, 33, -48, -50, -26, -3, -26, -43, -25, -12, -48, -27, 2, -53, -21,
                          -4, 8, 56],
                         [-74, 32, -52, -51, -25, -2, -27, -44, -24, -13, -49, -25, 0, -54, -19,
                          -6, 11, 55],
                         [-74, 30, -52, -50, -26, -2, -26, -44, -24, -13, -48, -26, 0, -53, -20,
                          -8, 12, 55],
                         [-74, 25, -51, -50, -26, -3, -26, -43, -25, -12, -48, -27, 1, -53, -20,
                          -10, 13, 54],
                         [-73, 27, -47, -50, -26, -5, -25, -43, -26, -12, -48, -27, 2, -53, -20,
                          -9, 11, 55],
                         [-70, 26, -43, -50, -25, -7, -25, -43, -26, -12, -48, -27, 2, -53, -20,
                          -8, 8, 56],
                         [-69, 23, -40, -50, -24, -9, -24, -43, -27, -11, -48, -27, 3, -53, -20,
                          -9, 7, 55],
                         [-70, 23, -42, -49, -27, -7, -24, -44, -27, -10, -48, -27, 4, -53, -20,
                          -10, 15, 54],
                         [-70, 20, -42, -49, -27, -7, -24, -43, -27, -10, -48, -28, 4, -52, -21,
                          -10, 24, 50],
                         [-69, 16, -41, -49, -27, -8, -24, -43, -27, -10, -48, -27, 4, -53, -20,
                          -10, 25, 50],
                         [-68, 16, -41, -50, -25, -8, -24, -44, -27, -10, -49, -27, 4, -53, -20,
                          -9, 24, 50],
                         [-68, 17, -42, -50, -24, -8, -24, -44, -27, -10, -49, -27, 4, -53, -20,
                          -8, 24, 51],
                         [-69, 19, -43, -50, -24, -8, -24, -43, -27, -10, -48, -27, 4, -53, -20,
                          -8, 24, 50],
                         [-69, 21, -43, -51, -24, -8, -24, -43, -27, -11, -48, -27, 4, -53, -19,
                          -7, 24, 51],
                         [-68, 25, -41, -51, -23, -10, -24, -43, -28, -11, -48, -28, 4, -53, -19,
                          -6, 23, 51],
                         [-71, 24, -46, -50, -25, -6, -24, -44, -26, -11, -49, -26, 3, -53, -18,
                          -7, 26, 50],
                         [-70, 21, -45, -50, -25, -7, -24, -43, -27, -11, -48, -27, 3, -53, -19,
                          -7, 25, 50],
                         [-68, 21, -43, -51, -24, -8, -24, -43, -27, -11, -48, -27, 3, -53, -19,
                          -7, 24, 51],
                         [-67, 20, -42, -50, -25, -8, -25, -43, -26, -11, -49, -27, 3, -53, -20,
                          -7, 23, 51],
                         [-66, 17, -40, -50, -25, -9, -24, -44, -26, -11, -49, -26, 4, -53, -19,
                          -8, 22, 51],
                         [-65, 16, -38, -50, -25, -10, -24, -44, -26, -10, -49, -27, 4, -53, -20,
                          -8, 22, 52],
                         [-64, 10, -37, -50, -25, -11, -24, -44, -26, -10, -49, -26, 5, -53, -19,
                          -10, 22, 51],
                         [-66, 9, -39, -49, -26, -9, -24, -45, -25, -9, -49, -26, 5, -53, -19,
                          -11, 24, 50],
                         [-66, 12, -38, -50, -25, -10, -24, -45, -24, -9, -49, -27, 5, -53, -20,
                          -10, 23, 51],
                         [-70, 22, -43, -50, -26, -6, -25, -45, -23, -10, -48, -28, 6, -52, -21,
                          -8, 25, 50],
                         [-70, 24, -42, -50, -26, -7, -26, -44, -24, -10, -48, -29, 5, -52, -22,
                          -8, 25, 50],
                         [-70, 24, -42, -50, -26, -8, -26, -44, -23, -9, -48, -29, 6, -52, -22,
                          -8, 25, 50],
                         [-70, 28, -41, -50, -26, -8, -26, -45, -23, -10, -48, -29, 6, -52, -21,
                          -7, 25, 50],
                         [-76, 32, -51, -50, -27, 0, -25, -46, -21, -10, -48, -28, 6, -52, -21,
                          -8, 30, 47],
                         [-79, 41, -56, -48, -29, 4, -25, -46, -21, -9, -49, -27, 6, -53, -20,
                          -9, 30, 47],
                         [-74, 25, -50, -49, -29, 0, -26, -44, -25, -10, -47, -30, 5, -51, -23,
                          -10, 24, 50],
                         [-75, 23, -52, -50, -27, 1, -25, -45, -23, -10, -48, -28, 4, -52, -21,
                          -10, 24, 50],
                         [-73, 16, -50, -49, -28, 0, -25, -45, -24, -10, -48, -29, 5, -52, -23,
                          -11, 23, 50],
                         [-70, 15, -46, -52, -23, -2, -25, -45, -24, -10, -48, -29, 4, -52, -22,
                          -10, 20, 52],
                         [-67, 17, -42, -54, -15, -6, -24, -44, -26, -10, -48, -29, 5, -52, -23,
                          -10, 17, 53]
                         ], "float32")

    append1 = np.reshape(np.append(static1,static2),(100,18))
    append2 = np.reshape(np.append(append1, static3), (150, 18))
    append3 = np.reshape(np.append(append2, static4), (200, 18))
    append4 = np.reshape(np.append(append3, static5), (250, 18))
    append5 = np.reshape(np.append(append4, static6), (300, 18))
    append6 = np.reshape(np.append(append5, static7), (350, 18))
    append7 = np.reshape(np.append(append6, static8), (400, 18))
    append8 = np.reshape(np.append(append7, static9), (450, 18))
    append9 = np.reshape(np.append(append8, static10), (500, 18))
    training_data = append9

    training_data = training_data / 180
    predict_data = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],"float32")  # 적용 데이터

    # the four expected results in the same order
    class_1 = np.ones((50, 1), dtype=np.int) * 0
    class_2 = np.ones((50, 1), dtype=np.int) * 1
    class_3 = np.ones((50, 1), dtype=np.int) * 2
    class_4 = np.ones((50, 1), dtype=np.int) * 3
    class_5 = np.ones((50, 1), dtype=np.int) * 4
    class_6 = np.ones((50, 1), dtype=np.int) * 5
    class_7 = np.ones((50, 1), dtype=np.int) * 6
    class_8 = np.ones((50, 1), dtype=np.int) * 7
    class_9 = np.ones((50, 1), dtype=np.int) * 8
    class_10 = np.ones((50, 1), dtype=np.int) * 9
    append1 = np.reshape(np.append(class_1, class_2), (100, 1))
    append2 = np.reshape(np.append(append1, class_3), (150, 1))
    append3 = np.reshape(np.append(append2, class_4), (200, 1))
    append4 = np.reshape(np.append(append3, class_5), (250, 1))
    append5 = np.reshape(np.append(append4, class_6), (300, 1))
    append6 = np.reshape(np.append(append5, class_7), (350, 1))
    append7 = np.reshape(np.append(append6, class_8), (400, 1))
    append8 = np.reshape(np.append(append7, class_9), (450, 1))
    append9 = np.reshape(np.append(append8, class_10), (500, 1))

    target_data = append9
    Y_train = np_utils.to_categorical(target_data, 10)

    model = Sequential()
    model.add(Dense(128, input_dim=18, activation='relu'))
    model.add(Dense(10, activation='softmax'))

    model.compile(loss='mean_squared_error',
                  optimizer='adam',
                  metrics=['accuracy'])

    model.fit(training_data, Y_train, batch_size=100,nb_epoch=20, verbose=1)

    model_json = model.to_json()
    with open("model.json", "w") as json_file:
        json_file.write(model_json)
    # serialize weights to HDF5
    model.save_weights("model.h5")
    print("Saved model to disk")

    main()
